name: Perform unit test on the new pull requests.

on:
  workflow_dispatch:
  pull_request:
    types: [opened, edited]

jobs:
  project-setup-and-run-tests:
    runs-on: ubuntu-latest

     # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgis/postgis:13-master
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: tests_oceans1876
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install python requirements
        run: |
          pip install -U pip
          pip install poetry
          poetry install
        env:
          POETRY_VIRTUALENVS_CREATE: false

      # - name: Setup the database before running migrations
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y --no-install-recommends postgresql-client
      #     psql -h postgres -d tests_oceans1876 -U tests_oceans1876 -c
      #     echo "CREATE EXTENSION postgis" | psql -d "$POSTGRES_TEST_DB"

      - name: Run Unit Testing
        run: poetry run ./scripts/run_tests.sh

    env:
      # The default PostgreSQL port
      POSTGRES_SERVER: localhost
      POSTGRES_USER: tests_oceans1876
      POSTGRES_PASSWORD: postgres
      POSTGRES_TEST_DB: tests_oceans1876
